buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
        classpath 'com.google.gms:google-services:4.3.15'   // ← 이 줄
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"

}

flutter {
    source = "../.."
}

android {
    namespace = "com.example.jjihong.cocafe"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.jjihong.cocafe"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 23
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // .env 파일에서 nativeAppKey 읽어오기 (Flutter 프로젝트 루트)
        def envFile = file('../../.env')
        def envProps = new Properties()
        if (envFile.exists()) {
            envFile.withInputStream { envProps.load(it) }
        }
        
        def nativeKey = envProps.getProperty("nativeAppKey", "")
        
        manifestPlaceholders = [
                kakao_scheme: nativeKey
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

apply plugin: 'com.google.gms.google-services'
